{"ast":null,"code":"import React,{useState}from\"react\";import'../Styles/login.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){// React States\nconst[errorMessages,setErrorMessages]=useState({});const[isSubmitted,setIsSubmitted]=useState(false);// User Login info\nconst database=[{username:\"user1\",password:\"pass1\"},{username:\"user2\",password:\"pass2\"}];const errors={uname:\"invalid username\",pass:\"invalid password\"};const handleSubmit=event=>{//Prevent page reload\nevent.preventDefault();var{uname,pass}=document.forms[0];// Find user login info\nconst userData=database.find(user=>user.username===uname.value);// Compare user info\nif(userData){if(userData.password!==pass.value){// Invalid password\nsetErrorMessages({name:\"pass\",message:errors.pass});}else{setIsSubmitted(true);}}else{// Username not found\nsetErrorMessages({name:\"uname\",message:errors.uname});}};// Generate JSX code for error message\nconst renderErrorMessage=name=>name===errorMessages.name&&/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:errorMessages.message});// JSX code for login form\nconst renderForm=/*#__PURE__*/_jsx(\"div\",{className:\"form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username \"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"uname\",required:true}),renderErrorMessage(\"uname\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password \"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"pass\",required:true}),renderErrorMessage(\"pass\")]}),/*#__PURE__*/_jsx(\"div\",{className:\"button-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})}),/*#__PURE__*/_jsxs(\"p\",{className:\"signup-link\",children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/signup\",children:\"Sign Up\"})]})]})});return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"Sign In\"}),isSubmitted?/*#__PURE__*/_jsx(\"div\",{children:\"User is successfully logged in\"}):renderForm]})});}export default Login;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Login","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","className","children","renderForm","onSubmit","type","required","href"],"sources":["D:/App/E-Commerce/E-Commerse/src/component/Containers/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport '../Styles/login.css'\r\n\r\n\r\nfunction Login() {\r\n    // React States\r\n    const [errorMessages, setErrorMessages] = useState({});\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    // User Login info\r\n    const database = [\r\n        {\r\n            username: \"user1\",\r\n            password: \"pass1\"\r\n        },\r\n        {\r\n            username: \"user2\",\r\n            password: \"pass2\"\r\n        }\r\n    ];\r\n\r\n    const errors = {\r\n        uname: \"invalid username\",\r\n        pass: \"invalid password\"\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        //Prevent page reload\r\n        event.preventDefault();\r\n\r\n        var { uname, pass } = document.forms[0];\r\n\r\n        // Find user login info\r\n        const userData = database.find((user) => user.username === uname.value);\r\n\r\n        // Compare user info\r\n        if (userData) {\r\n            if (userData.password !== pass.value) {\r\n                // Invalid password\r\n                setErrorMessages({ name: \"pass\", message: errors.pass });\r\n            } else {\r\n                setIsSubmitted(true);\r\n            }\r\n        } else {\r\n            // Username not found\r\n            setErrorMessages({ name: \"uname\", message: errors.uname });\r\n        }\r\n    };\r\n\r\n    // Generate JSX code for error message\r\n    const renderErrorMessage = (name) =>\r\n        name === errorMessages.name && (\r\n            <div className=\"error\">{errorMessages.message}</div>\r\n        );\r\n\r\n    // JSX code for login form\r\n    const renderForm = (\r\n        <div className=\"form\">\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"input-container\">\r\n                <label>Username </label>\r\n                <input type=\"text\" name=\"uname\" required />\r\n                {renderErrorMessage(\"uname\")}\r\n            </div>\r\n            <div className=\"input-container\">\r\n                <label>Password </label>\r\n                <input type=\"password\" name=\"pass\" required />\r\n                {renderErrorMessage(\"pass\")}\r\n            </div>\r\n            <div className=\"button-container\">\r\n                <input type=\"submit\" />\r\n              \r\n            </div>\r\n            <p className=\"signup-link\">\r\n                    Don't have an account? <a href=\"/signup\">Sign Up</a>\r\n                </p>\r\n        </form>\r\n    </div>\r\n);\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"login-form\">\r\n                <div className=\"title\">Sign In</div>\r\n                {isSubmitted ? <div>User is successfully logged in</div> : renderForm}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}